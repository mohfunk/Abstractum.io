{"id":"../node_modules/sugar/common/internal/assertWritable.js","dependencies":[{"name":"/Users/moh/ws/moh/personal/moh.page/package.json","includedInParent":true,"mtime":1564574743497},{"name":"/Users/moh/ws/moh/personal/moh.page/node_modules/sugar/package.json","includedInParent":true,"mtime":1564279111560},{"name":"./isPrimitive","loc":{"line":3,"column":26},"parent":"/Users/moh/ws/moh/personal/moh.page/node_modules/sugar/common/internal/assertWritable.js","resolved":"/Users/moh/ws/moh/personal/moh.page/node_modules/sugar/common/internal/isPrimitive.js"}],"generated":{"js":"'use strict';\n\nvar isPrimitive = require('./isPrimitive');\n\nfunction assertWritable(obj) {\n  if (isPrimitive(obj)) {\n    // If strict mode is active then primitives will throw an\n    // error when attempting to write properties. We can't be\n    // sure if strict mode is available, so pre-emptively\n    // throw an error here to ensure consistent behavior.\n    throw new TypeError('Property cannot be written');\n  }\n}\n\nmodule.exports = assertWritable;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":3,"column":0}},{"name":"isPrimitive","generated":{"line":3,"column":4},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":3,"column":4}},{"generated":{"line":3,"column":15},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":3,"column":15}},{"name":"require","generated":{"line":3,"column":18},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":3,"column":18}},{"generated":{"line":3,"column":25},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":3,"column":25}},{"generated":{"line":3,"column":26},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":3,"column":26}},{"generated":{"line":3,"column":41},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":3,"column":25}},{"generated":{"line":3,"column":42},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":0},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":5,"column":0}},{"name":"assertWritable","generated":{"line":5,"column":9},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":5,"column":9}},{"generated":{"line":5,"column":23},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":5,"column":0}},{"name":"obj","generated":{"line":5,"column":24},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":5,"column":24}},{"generated":{"line":5,"column":27},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":5,"column":0}},{"generated":{"line":5,"column":29},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":5,"column":29}},{"generated":{"line":6,"column":0},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":6,"column":2}},{"name":"isPrimitive","generated":{"line":6,"column":6},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":6,"column":6}},{"generated":{"line":6,"column":17},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":6,"column":17}},{"name":"obj","generated":{"line":6,"column":18},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":6,"column":18}},{"generated":{"line":6,"column":21},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":6,"column":17}},{"generated":{"line":6,"column":22},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":6,"column":2}},{"generated":{"line":6,"column":24},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":6,"column":24}},{"generated":{"line":7,"column":0},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":7,"column":4}},{"generated":{"line":8,"column":0},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":8,"column":4}},{"generated":{"line":9,"column":0},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":9,"column":4}},{"generated":{"line":10,"column":0},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":10,"column":4}},{"generated":{"line":11,"column":0},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":11,"column":4}},{"generated":{"line":11,"column":10},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":11,"column":10}},{"name":"TypeError","generated":{"line":11,"column":14},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":11,"column":14}},{"generated":{"line":11,"column":23},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":11,"column":10}},{"generated":{"line":11,"column":24},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":11,"column":24}},{"generated":{"line":11,"column":52},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":11,"column":10}},{"generated":{"line":11,"column":53},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":11,"column":4}},{"generated":{"line":12,"column":0},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":12,"column":3}},{"generated":{"line":13,"column":0},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":13,"column":1}},{"name":"module","generated":{"line":15,"column":0},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":15,"column":0}},{"generated":{"line":15,"column":6},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":15,"column":6}},{"name":"exports","generated":{"line":15,"column":7},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":15,"column":7}},{"generated":{"line":15,"column":14},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":15,"column":0}},{"name":"assertWritable","generated":{"line":15,"column":17},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":15,"column":17}},{"generated":{"line":15,"column":31},"source":"../node_modules/sugar/common/internal/assertWritable.js","original":{"line":15,"column":0}}],"sources":{"../node_modules/sugar/common/internal/assertWritable.js":"'use strict';\n\nvar isPrimitive = require('./isPrimitive');\n\nfunction assertWritable(obj) {\n  if (isPrimitive(obj)) {\n    // If strict mode is active then primitives will throw an\n    // error when attempting to write properties. We can't be\n    // sure if strict mode is available, so pre-emptively\n    // throw an error here to ensure consistent behavior.\n    throw new TypeError('Property cannot be written');\n  }\n}\n\nmodule.exports = assertWritable;"},"lineCount":null}},"error":null,"hash":"5749ee744d1cc3ee5275cb7b6e38456c","cacheData":{"env":{}}}