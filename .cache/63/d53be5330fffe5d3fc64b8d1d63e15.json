{"id":"HTHG","dependencies":[{"name":"./../assets/img/diffEngine.jpg","dynamic":true,"resolved":"/Users/moh/ws/moh/personal/moh.page/src/content/assets/img/diffEngine.jpg","parent":"/Users/moh/ws/moh/personal/moh.page/src/content/blog/3.functional_vs_imperative.md"},{"name":"./../assets/svg/c.svg","dynamic":true,"resolved":"/Users/moh/ws/moh/personal/moh.page/src/content/assets/svg/c.svg","parent":"/Users/moh/ws/moh/personal/moh.page/src/content/blog/3.functional_vs_imperative.md"}],"generated":{"html":"<hr><p>Functional vs. Imperative Programming\n2018 Nov\nblog</p><hr><h1 id=\"functional-vs-imperative-programming\">Functional vs. Imperative Programming</h1><h6 id=\"nov-2018\">Nov 2018</h6><p><img src=\"/ac2d83d83970a1b4cf0230abcd00da43.jpg\" alt=\"alt-text\"></p><h5 id=\"babbages-difference-engine-alt-text-giles-moss\">Babbage&#39;s Difference Engine <img src=\"/239e387e1a08fcf8fd2e521cd75fdef2.svg\" alt=\"alt-text\"> <a href=\"https://www.flickr.com/photos/mrgiles/325903759/\">Giles Moss</a></h5><p>A powerful language must provide the following 3 mechanisms to allow the formulation of complex ideas from simpler ones:</p><ul>\n<li>- Primative Expressions</li>\n<li>- Means of Combinations</li>\n<li>- Means of Abstractions</li>\n</ul><hr><h2 id=\"functional-programming\">Functional Programming</h2><p>Functional programming is based on the following basic ideas:</p><ul>\n<li>- Evaluation of Expression.</li>\n<li>- Binding Variables to Values.</li>\n</ul><p>The purpose of an Expression is to produce a Value, multiple related Expressions are grouped in a function. A Mathematical function is a process (or mapping) that associates elements of one set to another, such that each element in the domain is associated with exactly one element in the range.</p><p><strong>The order of evaluations does not matter.</strong></p><hr><h2 id=\"imperative-programming\">Imperative Programming</h2><p>Imperative programming is based on the following ideas:</p><ul>\n<li>- Execution of Statements.</li>\n<li>- Store of States</li>\n</ul><p>The purpose of a Statement is to alter the State of a variable in the Store of a program. A Statement may depends on the previous State of a Variable in order to alter it.</p><p><strong>The order of execution does matter.</strong></p>"},"sourceMaps":null,"error":null,"hash":"795bea010c880cce7f0d6c8db7ea72ab","cacheData":{}}