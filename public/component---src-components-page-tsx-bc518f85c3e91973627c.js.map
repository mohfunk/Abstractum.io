{"version":3,"sources":["webpack:///./src/components/page.tsx","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_plugin_mdx__WEBPACK_IMPORTED_MODULE_1__","PageTemplate","_ref","mdx","data","a","createElement","id","className","body","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","MDXRenderer","require","module","React","useMDXComponents","useMDXScope","scope","components","children","props","_objectWithoutPropertiesLoose","mdxComponents","mdxScope","End","useMemo","fullScope","_objectSpread","keys","values","map","key","_construct","concat","_toConsumableArray","fn"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAUeS,UAPM,SAAAC,GAAA,IAAWC,EAAXD,EAAGE,KAAQD,IAAX,OAAuBL,EAAAO,EAAAC,cAAA,OAAKC,GAAI,QACnDT,EAAAO,EAAAC,cAAA,OAAKC,GAAI,OACPT,EAAAO,EAAAC,cAAA,OAAKE,UAAW,QACdV,EAAAO,EAAAC,cAACN,EAAA,YAAD,KAAcG,EAAIM,UAMjB,IAAMb,EAAS,kCCXtB,IAAAc,EAAclB,EAAQ,GACtBmB,EAAanB,EAAQ,IACrBoB,EAAgBpB,EAAQ,IACxBqB,EAAerB,EAAQ,GACvBsB,EAAetB,EAAQ,GACvBuB,EAAYvB,EAAQ,GACpBwB,EAAWxB,EAAQ,KACnByB,GAAkBzB,EAAQ,GAAW0B,SAAA,IAAeC,UAIpDC,EAAAL,EAAA,WACA,SAAAM,KACA,QAAAJ,EAAA,aAAiD,GAAAI,kBAEjDC,GAAAP,EAAA,WACAE,EAAA,gBAGAP,IAAAa,EAAAb,EAAAW,GAAAD,GAAAE,GAAA,WACAH,UAAA,SAAAK,EAAAC,GACAb,EAAAY,GACAX,EAAAY,GACA,IAAAC,EAAAC,UAAAC,OAAA,EAAAJ,EAAAZ,EAAAe,UAAA,IACA,GAAAL,IAAAF,EAAA,OAAAH,EAAAO,EAAAC,EAAAC,GACA,GAAAF,GAAAE,EAAA,CAEA,OAAAD,EAAAG,QACA,kBAAAJ,EACA,kBAAAA,EAAAC,EAAA,IACA,kBAAAD,EAAAC,EAAA,GAAAA,EAAA,IACA,kBAAAD,EAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,kBAAAD,EAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,IAAAI,EAAA,OAEA,OADAA,EAAAC,KAAAC,MAAAF,EAAAJ,GACA,IAAAT,EAAAe,MAAAP,EAAAK,IAGA,IAAAG,EAAAN,EAAAO,UACAC,EAAAvB,EAAAG,EAAAkB,KAAAG,OAAAF,WACAG,EAAAC,SAAAN,MAAAO,KAAAd,EAAAU,EAAAT,GACA,OAAAX,EAAAsB,KAAAF,0BCtCA,IAAMK,EAAcC,EAApB,KAEAC,UAAiB,CACfF,YAAaA,4qDCTf,IAAMG,EAAQF,EAAd,KACkCA,EAAO,IAAjCG,qBAAkBxC,QAClByC,EAAgBJ,EAAO,KAAvBI,YAERH,UAAiB,SAAAvC,GAKd,IAJD2C,EAIC3C,EAJD2C,MACAC,EAGC5C,EAHD4C,WACAC,EAEC7C,EAFD6C,SACGC,sIACFC,CAAA/C,EAAA,mCACKgD,EAAgBP,EAAtBG,GACMK,EAAWP,EAFhBC,GAKKO,EAAMV,EAAAW,QACV,WACE,IAAAN,EACE,YAGF,IAAMO,EAASC,EAAA,CAGbb,MAHaA,EAIbvC,OAJFgD,GAQMK,EAAOrB,YAAbmB,GACMG,EAASD,EAAAE,IAAS,SAAAC,GAAG,OAAIL,EAAJK,KAG3B,OAFQC,EAAAvB,SAAA,QAAAwB,OAAAC,EAAAN,GAAA,IAART,KAEOgB,2BAAPN,MAEF,CAAAV,EApBFF,IAuBA,OACEH,EAAApC,cAAA8C,EAAAG,EAAA,CAA2BT,WAAYI,GADzCF","file":"component---src-components-page-tsx-bc518f85c3e91973627c.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nconst PageTemplate = ({ data: { mdx } }) => <div id={\"root\"}>\n  <div id={\"app\"}>\n    <div className={\"Post\"}>\n      <MDXRenderer>{mdx.body}</MDXRenderer>\n    </div>\n  </div>\n</div>\nexport default PageTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        title\n      }\n    }\n  }\n`","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(\"./mdx-renderer\");\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer\n};\n","const React = require(\"react\");\nconst { useMDXComponents, mdx } = require(\"@mdx-js/react\");\nconst { useMDXScope } = require(\"./context\");\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components);\n  const mdxScope = useMDXScope(scope);\n\n  // Memoize the compiled component\n  const End = React.useMemo(\n    () => {\n      if (!children) {\n        return null;\n      }\n\n      const fullScope = {\n        // React is here just in case the user doesn't pass them in\n        // in a manual usage of the renderer\n        React,\n        mdx,\n        ...mdxScope\n      };\n\n      const keys = Object.keys(fullScope);\n      const values = keys.map(key => fullScope[key]);\n      const fn = new Function(\"_fn\", ...keys, `${children}`);\n\n      return fn({}, ...values);\n    },\n    [children, scope]\n  );\n\n  return (\n    React.createElement(End, { components: mdxComponents, ...props })\n  );\n};\n"],"sourceRoot":""}